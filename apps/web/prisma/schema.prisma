generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  admin
  member
}

model User {
  id        Int         @id @default(autoincrement())
  role      Role        @default(member)
  name      String
  username  String      @unique
  email     String      @unique
  posts     Post[]
  analytics Analytics[]
  notes     Note[]
  image     String?     @default("https://public.blob.vercel-storage.com/eEZHAoPTOBSYGBE3/JRajRyC-PhBHEinQkupt02jqfKacBVHLWJq7Iy.png")
  password  String
  theme     String      @default("dark")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id       Int  @id @default(autoincrement())
  author   User @relation(fields: [authorId], references: [id])
  authorId Int // relation scalar field  (used in the `@relation` attribute above)

  @@index([authorId])
}

model Note {
  id       Int    @id @default(autoincrement())
  message  String
  author   User   @relation(fields: [authorId], references: [id])
  authorId Int // relation scalar field  (used in the `@relation` attribute above)

  @@index([authorId])
}

model Analytics {
  id       String @id @default(cuid())
  name     String
  author   User   @relation(fields: [authorId], references: [id])
  authorId Int // relation scalar field  (used in the `@relation` attribute above)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([authorId])
}

model Theme {
  id    Int    @id @default(autoincrement())
  theme String
}

model Product {
  id              Int               @id @default(autoincrement())
  name            String
  description     String
  price           Float
  stock           Int
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  Category        Category?         @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  ProductCategory ProductCategory[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String
  products Product[]

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  ProductCategory ProductCategory[]
}

model ProductCategory {
  productId  Int
  categoryId Int

  product  Product  @relation(fields: [productId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@id([productId, categoryId])
}
